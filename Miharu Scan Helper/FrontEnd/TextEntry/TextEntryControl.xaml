<UserControl x:Name="userControl" 
			 x:Class="Miharu.FrontEnd.TextEntryControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Miharu.FrontEnd"
			 xmlns:gif="http://wpfanimatedgif.codeplex.com"
			 xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
			 xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
			 xmlns:helper="clr-namespace:Miharu.FrontEnd.Helper" 
			 xmlns:input="clr-namespace:Miharu.FrontEnd.Input" 
			 xmlns:local1="clr-namespace:Miharu.FrontEnd.TextEntry" xmlns:Converters="http://metro.mahapps.com/winfx/xaml/shared" xmlns:sys="clr-namespace:System;assembly=mscorlib"
			 mc:Ignorable="d" 
             d:DesignHeight="802" d:DesignWidth="606" 
			 Loaded="UserControl_Loaded">
	<UserControl.Resources>
		<local1:TextEntryKanjiExpanderMarginConverter x:Key="marginConverter"/>
		<local1:ParsedTextBoxHeightConverter x:Key="heightConverter"/>


		<Converters:ThicknessBindingConverter x:Key="ThicknessBindingConverter" />
		<Converters:CornerRadiusBindingConverter x:Key="CornerRadiusBindingConverter" />


		<Thickness x:Key="ExpanderHeaderThemePadding">2</Thickness>
		<sys:Double x:Key="ExpanderToggleButtonEllipseThemeSize">26</sys:Double>

		<Style x:Key="Custom.ToggleButton.ExpanderHeader.Base" TargetType="{x:Type ToggleButton}">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="BorderBrush" Value="Transparent" />
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="FocusVisualStyle" Value="{x:Null}" />
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="{DynamicResource ExpanderHeaderThemePadding}" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
		</Style>


		<Style x:Key="Custom.ToggleButton.ExpanderHeader.Up"
           BasedOn="{StaticResource Custom.ToggleButton.ExpanderHeader.Base}"
           TargetType="{x:Type ToggleButton}">
			<Setter Property="HorizontalContentAlignment" Value="Stretch" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
							<Grid Margin="{TemplateBinding Padding}"
                              Background="Transparent"
                              SnapsToDevicePixels="False">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Grid Margin="1">
									<Grid.LayoutTransform>
										<TransformGroup>
											<TransformGroup.Children>
												<TransformCollection>
													<RotateTransform Angle="180" />
												</TransformCollection>
											</TransformGroup.Children>
										</TransformGroup>
									</Grid.LayoutTransform>
									<Ellipse x:Name="Circle"
                                         Width="{DynamicResource ExpanderToggleButtonEllipseThemeSize}"
                                         Height="{DynamicResource ExpanderToggleButtonEllipseThemeSize}"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Stroke="{TemplateBinding Foreground}" />
									<Label x:Name="Icon"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Content="部"
                                      SnapsToDevicePixels="false"
                                      Foreground="{TemplateBinding Foreground}"
                                      FontSize="22" />
								</Grid>
								<Controls:ContentControlEx Grid.Column="1"
                                                       Margin="4 0 0 0"
                                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                       Content="{TemplateBinding Content}"
                                                       ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}"
                                                       ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                       ContentTemplate="{TemplateBinding ContentTemplate}"
                                                       ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                       RecognizesAccessKey="{TemplateBinding Controls:ControlsHelper.RecognizesAccessKey}"
                                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray2}" />
								<Setter TargetName="Circle" Property="Stroke" Value="{DynamicResource MahApps.Brushes.Gray2}" />
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
								<Setter TargetName="Circle" Property="Stroke" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
								<Setter TargetName="Circle" Property="StrokeThickness" Value="2" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="VerticalContentAlignment" Value="Center" />
		</Style>


		<Style x:Key="Custom.ToggleButton.ExpanderHeader.Down"
           BasedOn="{StaticResource Custom.ToggleButton.ExpanderHeader.Up}"
           TargetType="{x:Type ToggleButton}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
							<Grid Margin="{TemplateBinding Padding}"
                              Background="Transparent"
                              SnapsToDevicePixels="False">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Grid Margin="1">
									<Ellipse x:Name="Circle"
                                         Width="{DynamicResource ExpanderToggleButtonEllipseThemeSize}"
                                         Height="{DynamicResource ExpanderToggleButtonEllipseThemeSize}"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Stroke="{TemplateBinding Foreground}" />
									<Label x:Name="Icon"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Content="部"
                                      SnapsToDevicePixels="false"
                                      Foreground="{TemplateBinding Foreground}"
                                      FontSize="22" />
								</Grid>
								<Controls:ContentControlEx Grid.Column="1"
                                                       Margin="4 0 0 0"
                                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                       Content="{TemplateBinding Content}"
                                                       ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}"
                                                       ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                       ContentTemplate="{TemplateBinding ContentTemplate}"
                                                       ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                       RecognizesAccessKey="{TemplateBinding Controls:ControlsHelper.RecognizesAccessKey}"
                                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray2}" />
								<Setter TargetName="Circle" Property="Stroke" Value="{DynamicResource MahApps.Brushes.Gray2}" />
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
								<Setter TargetName="Circle" Property="Stroke" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
								<Setter TargetName="Circle" Property="StrokeThickness" Value="2" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Storyboard x:Key="Custom.Storyboard.Expander.Expand">
			<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(UIElement.Visibility)">
				<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
			</ObjectAnimationUsingKeyFrames>
			<DoubleAnimation Storyboard.TargetName="ExpandSite"
                         Storyboard.TargetProperty="(UIElement.Opacity)"
                         From="0"
                         To="1"
                         Duration="0:0:0.25" />
		</Storyboard>

		<Storyboard x:Key="Custom.Storyboard.Expander.Collapse">
			<DoubleAnimation Storyboard.TargetName="ExpandSite"
                         Storyboard.TargetProperty="(UIElement.Opacity)"
                         From="1"
                         To="0"
                         Duration="0:0:0.25" />
			<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(UIElement.Visibility)">
				<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
				<DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="{x:Static Visibility.Collapsed}" />
			</ObjectAnimationUsingKeyFrames>
		</Storyboard>


		<Style x:Key="Custom.Styles.Expander" TargetType="{x:Type Expander}">
			<Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper" />
			<Setter Property="Controls:ExpanderHelper.CollapseStoryboard" Value="{StaticResource Custom.Storyboard.Expander.Collapse}" />
			<Setter Property="Controls:ExpanderHelper.ExpandStoryboard" Value="{StaticResource Custom.Storyboard.Expander.Expand}" />
			<Setter Property="Controls:ExpanderHelper.HeaderDownStyle" Value="{StaticResource Custom.ToggleButton.ExpanderHeader.Down}" />
			<Setter Property="Controls:ExpanderHelper.HeaderUpStyle" Value="{StaticResource Custom.ToggleButton.ExpanderHeader.Up}" />
			<Setter Property="Controls:HeaderedControlHelper.HeaderBackground" Value="{DynamicResource MahApps.Brushes.Accent}" />
			<Setter Property="Controls:HeaderedControlHelper.HeaderFontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
			<Setter Property="Controls:HeaderedControlHelper.HeaderForeground" Value="{x:Null}" />
			<Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
			<Setter Property="Padding" Value="4" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Expander}">
						<Grid>
							<Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource MahApps.Brushes.Control.Disabled}"
                                   IsHitTestVisible="false"
                                   Opacity="0" />
							<DockPanel x:Name="ExpanderRoot">
								<Border x:Name="HeaderSite"
                                    Background="{TemplateBinding Controls:HeaderedControlHelper.HeaderBackground}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.CornerRadius), Converter={StaticResource CornerRadiusBindingConverter}, ConverterParameter={x:Static Converters:RadiusType.Bottom}}"
                                    DockPanel.Dock="Top"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    UseLayoutRounding="True">
									<ToggleButton x:Name="ToggleSite"
                                              Controls:ControlsHelper.ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}"
                                              Content="{TemplateBinding Header}"
                                              ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                              FontFamily="{TemplateBinding Controls:HeaderedControlHelper.HeaderFontFamily}"
                                              FontSize="{TemplateBinding Controls:HeaderedControlHelper.HeaderFontSize}"
                                              FontStretch="{TemplateBinding Controls:HeaderedControlHelper.HeaderFontStretch}"
                                              FontWeight="{TemplateBinding Controls:HeaderedControlHelper.HeaderFontWeight}"
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Style="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ExpanderHelper.HeaderDownStyle)}"
                                              UseLayoutRounding="False">
										<ToggleButton.Foreground>
											<MultiBinding Converter="{x:Static Converters:BackgroundToForegroundConverter.Instance}">
												<Binding Mode="OneWay"
                                                     Path="(Controls:HeaderedControlHelper.HeaderBackground)"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
												<Binding Mode="OneWay"
                                                     Path="(Controls:HeaderedControlHelper.HeaderForeground)"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
											</MultiBinding>
										</ToggleButton.Foreground>
									</ToggleButton>
								</Border>
								<Border x:Name="ExpandSite"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessBindingConverter}, ConverterParameter={x:Static Converters:ThicknessSideType.Top}}"
                                    CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.CornerRadius), Converter={StaticResource CornerRadiusBindingConverter}, ConverterParameter={x:Static Converters:RadiusType.Top}}"
                                    DockPanel.Dock="Bottom"
                                    Focusable="false"
                                    Opacity="0"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    UseLayoutRounding="True"
                                    Visibility="Collapsed">
									<ContentPresenter Margin="{TemplateBinding Padding}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Cursor="{TemplateBinding Cursor}"
                                                  UseLayoutRounding="False" />
								</Border>
							</DockPanel>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="MouseOver" />
									<VisualState x:Name="Disabled">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
												<SplineDoubleKeyFrame KeyTime="0" Value="0.7" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderRoot" Storyboard.TargetProperty="(UIElement.Opacity)">
												<EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Grid>
						<ControlTemplate.Triggers>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsExpanded, RelativeSource={RelativeSource Self}}" Value="True" />
									<Condition Binding="{Binding Path=(Controls:ExpanderHelper.ExpandStoryboard), RelativeSource={RelativeSource Self}}" Value="{x:Null}" />
								</MultiDataTrigger.Conditions>
								<Setter TargetName="ExpandSite" Property="Opacity" Value="1" />
								<Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsExpanded, RelativeSource={RelativeSource Self}}" Value="False" />
									<Condition Binding="{Binding Path=(Controls:ExpanderHelper.CollapseStoryboard), RelativeSource={RelativeSource Self}}" Value="{x:Null}" />
								</MultiDataTrigger.Conditions>
								<Setter TargetName="ExpandSite" Property="Opacity" Value="0" />
								<Setter TargetName="ExpandSite" Property="Visibility" Value="Collapsed" />
							</MultiDataTrigger>

							<Trigger Property="ExpandDirection" Value="Right">
								<Setter TargetName="ExpandSite" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessBindingConverter}, ConverterParameter={x:Static Converters:ThicknessSideType.Left}}" />
								<Setter TargetName="ExpandSite" Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.CornerRadius), Converter={StaticResource CornerRadiusBindingConverter}, ConverterParameter={x:Static Converters:RadiusType.Left}}" />
								<Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
								<Setter TargetName="HeaderSite" Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.CornerRadius), Converter={StaticResource CornerRadiusBindingConverter}, ConverterParameter={x:Static Converters:RadiusType.Right}}" />
								<Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
								<Setter TargetName="ToggleSite" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ExpanderHelper.HeaderRightStyle)}" />
							</Trigger>
							<Trigger Property="ExpandDirection" Value="Up">
								<Setter TargetName="ExpandSite" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessBindingConverter}, ConverterParameter={x:Static Converters:ThicknessSideType.Bottom}}" />
								<Setter TargetName="ExpandSite" Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.CornerRadius), Converter={StaticResource CornerRadiusBindingConverter}, ConverterParameter={x:Static Converters:RadiusType.Bottom}}" />
								<Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
								<Setter TargetName="HeaderSite" Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.CornerRadius), Converter={StaticResource CornerRadiusBindingConverter}, ConverterParameter={x:Static Converters:RadiusType.Top}}" />
								<Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
								<Setter TargetName="ToggleSite" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ExpanderHelper.HeaderUpStyle)}" />
							</Trigger>
							<Trigger Property="ExpandDirection" Value="Left">
								<Setter TargetName="ExpandSite" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessBindingConverter}, ConverterParameter={x:Static Converters:ThicknessSideType.Right}}" />
								<Setter TargetName="ExpandSite" Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.CornerRadius), Converter={StaticResource CornerRadiusBindingConverter}, ConverterParameter={x:Static Converters:RadiusType.Right}}" />
								<Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
								<Setter TargetName="HeaderSite" Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.CornerRadius), Converter={StaticResource CornerRadiusBindingConverter}, ConverterParameter={x:Static Converters:RadiusType.Left}}" />
								<Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
								<Setter TargetName="ToggleSite" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ExpanderHelper.HeaderLeftStyle)}" />
							</Trigger>
							<Trigger Property="IsExpanded" Value="false">
								<Setter TargetName="HeaderSite" Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.CornerRadius)}" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


	</UserControl.Resources>
	
	<Grid ScrollViewer.VerticalScrollBarVisibility="Disabled">
		<Grid.RowDefinitions>
			<RowDefinition Height="250"/>
			<RowDefinition Height="150"/>
			<RowDefinition Height="3*"/>
		</Grid.RowDefinitions>

		<Grid x:Name="ParsedTextAndIMGPreviewGrid" Grid.Row="0" Margin="3" SizeChanged="ParsedTextAndIMGPreviewGrid_SizeChanged" Panel.ZIndex="10000">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" MinWidth="10" />
				<ColumnDefinition Width="1*" MinWidth="100"/>
			</Grid.ColumnDefinitions>
			<Border x:Name="PreviewIMGBorder" BorderThickness="1" BorderBrush="Black" Margin="0,0,3,0" Grid.Column="0">
				<Image x:Name="PreviewIMG" Height="Auto"/>
			</Border>

			<Border x:Name="border" BorderThickness="1" BorderBrush="Gray" Margin="3,0,0,0" Grid.Column="1">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="2*"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>

					<Grid Grid.Column="0" Grid.ColumnSpan="2">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="1*"/>
						</Grid.ColumnDefinitions>
						<Label Content="Parsed Text" Grid.Column="0" FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Left" />


						<Separator Grid.Column="1" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" HorizontalAlignment="Center" Margin="5,5"/>


						<Controls:ToggleSwitch x:Name="VerticalToggleSwitch" Grid.Column="2"
							OnContent ="Vertical" OffContent="Horizontal"
							VerticalAlignment="Center" HorizontalAlignment="Left"  
							IsOn="True" 
							Toggled="VerticalToggleSwitched_Toggled" 
							FontSize="14" HorizontalContentAlignment="Right"/>


						<Image x:Name="S_Tail" Grid.Column="3" Width="32" Height="32" Visibility="Hidden" gif:ImageBehavior.AnimatedSource="/Miharu Scan Helper;component/Resources/Graphics/S_Tail.gif" gif:ImageBehavior.AutoStart="True" Margin="10,0,0,-80" VerticalAlignment="Bottom" />
						<Image x:Name="S_Head" Grid.Column="4" Width="32" Height="32" Visibility="Hidden" gif:ImageBehavior.AnimatedSource="/Miharu Scan Helper;component/Resources/Graphics/S_Head.gif" gif:ImageBehavior.AutoStart="True" Margin="0,0,0,-80" VerticalAlignment="Bottom"/>

						<Button x:Name="RefreshParseButton" Grid.Column="5" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,5,5,5" Click="RefreshParseButton_Click" Padding="0,2,3,2">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Label x:Name="refreshLabel" Content="Refresh" FontSize="14" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" />
								<iconPacks:PackIconModern Kind="Refresh" Grid.Column="1" Margin="3,0,0,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
								Width="Auto" 
								MinHeight="{Binding ActualHeight, ElementName=refreshLabel, Mode=OneWay}" />
							</Grid>
						</Button>

					</Grid>
					<Border x:Name="border1" BorderThickness="1" BorderBrush="Black" Grid.Row="1" Grid.ColumnSpan="2" Margin="3,0,3,3" Panel.ZIndex="1000" >
						<Expander x:Name="KanjiInputExpander" ExpandDirection="Down" BorderThickness="0" BorderBrush="{x:Null}" ScrollViewer.VerticalScrollBarVisibility="Disabled" Collapsed="KanjiInputExpander_Collapsed" Expanded="KanjiInputExpander_Expanded" Padding="0" GotFocus="KanjiInputExpander_GotFocus" 
								  Style="{StaticResource Custom.Styles.Expander}">
							<Expander.Margin>
								<MultiBinding Converter="{StaticResource marginConverter}">
									<Binding ElementName="userControl" Path="ActualHeight" />
									<Binding ElementName="ParsedTextAndIMGPreviewGrid" Path="ActualHeight" />
								</MultiBinding>
							</Expander.Margin>

							<Expander.Header >
								<TextBox x:Name="ParsedTextBox" TextWrapping="Wrap" FontSize="26" AcceptsReturn="True" AcceptsTab="True" FontFamily="Meiryo" TextChanged="ParsedTextBox_TextChanged" BorderBrush="{x:Null}" BorderThickness="0" VerticalScrollBarVisibility="Auto" 
										 Height="{Binding ActualHeight, Converter={StaticResource heightConverter}, ElementName=border1, Mode=OneWay}"  
										 Margin="0" Padding="4" />
							</Expander.Header>
						</Expander>
					</Border>


					<Grid Grid.Row="2">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="1*" />
						</Grid.ColumnDefinitions>
						<Label Content="Jisho:" FontSize="16" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,5,0" Padding="0"/>
						<helper:LinkLabel x:Name="JishoLinkLabel" Content="https://whatever.com" FontSize="16" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="0" WebBrowser="True"/>
					</Grid>




				</Grid>
			</Border>
		</Grid>

		<Border BorderThickness="1" BorderBrush="Gray" Margin="3" Grid.Row="2">
			<TabControl x:Name="TextTabControl" SelectionChanged="TextTabControl_SelectionChanged">
				<TabItem Header="Text" Controls:HeaderedControlHelper.HeaderFontSize="20">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="1*"/>
						</Grid.RowDefinitions>
						<Button x:Name="RefreshAllButton" Margin="5" Grid.Row="0" HorizontalAlignment="Left" Click="RefreshAllButton_Click" Padding="0,2,3,2" VerticalAlignment="Top">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Label x:Name="refreshAllLabel" Content="Refresh All Translations" FontSize="14" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" />
								<iconPacks:PackIconModern Kind="Refresh" Grid.Column="1" Margin="3,0,0,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
									Width="Auto" 
									MinHeight="{Binding ActualHeight, ElementName=refreshAllLabel, Mode=OneWay}" />
							</Grid>
						</Button>
						<ScrollViewer Margin="6,5,5,5" Grid.Row="1">
							<StackPanel x:Name="TranslationSourcesStackPanel"/>
						</ScrollViewer>
					</Grid>
				</TabItem>
				<TabItem Header="SFX" Controls:HeaderedControlHelper.HeaderFontSize="20">

					<Grid x:Name="SFXTranslationGrid" >

					</Grid>
				</TabItem>
				<TabItem Header="Notes" Controls:HeaderedControlHelper.HeaderFontSize="20">
					<ScrollViewer Margin="6,5,5,5" Grid.Row="1">
						<StackPanel x:Name="NotesStackPanel" />
					</ScrollViewer>
				</TabItem>
			</TabControl>
		</Border>


		<Border x:Name="border2" BorderThickness="1" BorderBrush="Gray" Margin="3" Grid.Row="1">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="40" MinHeight="40"/>
					<RowDefinition Height="1*" />
				</Grid.RowDefinitions>

				<Label Content="Translation" Grid.Row="0" FontSize="20" VerticalAlignment="Top" HorizontalAlignment="Left" />

				<Border BorderThickness="1" BorderBrush="Black" Grid.Row="1">
					<TextBox x:Name="TranslatedTextBox" TextWrapping="Wrap" FontSize="18" AcceptsReturn="True" AcceptsTab="True" TextChanged="TranslatedTextBox_TextChanged" BorderBrush="{x:Null}" BorderThickness="0" VerticalScrollBarVisibility="Auto" />
				</Border>
			</Grid>
		</Border>


	</Grid>
</UserControl>
